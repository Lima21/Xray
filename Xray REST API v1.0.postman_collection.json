{
	"info": {
		"_postman_id": "d9c36b82-8e0d-467c-8c5b-d04557de9dbc",
		"name": "Xray REST API v1.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "setup",
			"item": [
				{
					"name": "get project id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Project returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"PROJECT_ID\", jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/project/{{PROJECT_KEY}}",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"project",
								"{{PROJECT_KEY}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Xray custom fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"custom fields returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf.at.least(1);",
									"",
									"    for (var i = 0;i<jsonData.length;i++) {",
									"        var cf = jsonData[i];",
									"        // ((cf.name == \"Test Type\") || (cf.schema.custom == \"com.xpandit.plugins.xray:test-type-custom-field\")) ",
									"        if (cf.name == \"Test Type\") {",
									"            pm.globals.set(\"CF_Test_Type\", cf.id);",
									"        } else if (cf.name == \"Pre-Condition Type\") {",
									"            pm.globals.set(\"CF_Precondition_Type\", cf.id);",
									"        } else if (cf.name == \"Cucumber Scenario\") {",
									"            pm.globals.set(\"CF_Cucumber_Scenario\", cf.id);",
									"        } else if (cf.name == \"Cucumber Test Type\") {",
									"            pm.globals.set(\"CF_Cucumber_Test_Type\", cf.id);",
									"        } else if (cf.name == \"Manual Test Steps\") {",
									"            pm.globals.set(\"CF_Manual_Test_Steps\", cf.id);",
									"        } else if (cf.name == \"Generic Test Definition\") {",
									"            pm.globals.set(\"CF_Generic_Definition\", cf.id);",
									"        } else if (cf.name == \"Test Environments\") {",
									"            pm.globals.set(\"CF_Test_Environments\", cf.id);",
									"        } else if (cf.name == \"Test Repository Path\") {",
									"            pm.globals.set(\"CF_Test_Repository_Path\", cf.id);",
									"        }",
									"",
									"    }",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/field",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"field"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user story S1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Story created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"S1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"S1\",\n       \"description\": \"S1: example of a user storu\",\n       \"issuetype\": {\n          \"name\": \"{{STORY_ISSUETYPE_NAME}}\"\n       }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create defect D1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Bug created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"D1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"D1\",\n       \"description\": \"D1: example of a udefect\",\n       \"issuetype\": {\n          \"name\": \"{{BUG_ISSUETYPE_NAME}}\"\n       }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create folder \"Postman F1\" in Test Repository",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Folder created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).not.eq(undefined);",
									"    pm.globals.set(\"F1_ID\", jsonData.id);",
									"    pm.globals.set(\"F1_PATH\", \"/\" + jsonData.name);",
									"    pm.globals.set(\"F1_NAME\", jsonData.name);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Postman F1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/-1",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testrepository",
								"{{PROJECT_KEY}}",
								"folders",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create folder \"Postman F2\" in Test Repository",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Folder created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).not.eq(undefined);",
									"    pm.globals.set(\"F2_ID\", jsonData.id);",
									"    pm.globals.set(\"F2_PATH\", \"/\" + jsonData.name);",
									"    pm.globals.set(\"F2_NAME\", jsonData.name);",
									"});",
									"",
									"if (pm.collectionVariables.get(\"XRAY_VERSION_MAJOR\") == \"4\") {",
									"    postman.setNextRequest(\"create manual test T1 - Xray v4.x\")",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Postman F2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/-1",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testrepository",
								"{{PROJECT_KEY}}",
								"folders",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create manual test T1 - Xray v4.x",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"T1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"T1\",\n       \"description\": \"T1: example of manual test\",\n       \"issuetype\": {\n          \"name\": \"{{TEST_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Manual\" },\n       \"{{CF_Manual_Test_Steps}}\": {\n            \"steps\": [\n\t\t\t\t{\n                    \"index\": 1,\n                    \"fields\": {\n                        \"Action\": \"Step 1\",\n                        \"Data\": \"input Data 1\",\n                        \"Expected Result\": \"Excepted result 1\"\n                    }\n                },\n                 {\n                    \"index\": 2,\n                    \"fields\": {\n                        \"Action\": \"Step 2\",\n                        \"Data\": \"input Data 2\",\n                        \"Expected Result\": \"Excepted result 2\"\n                    }\n                },\n                 {\n                    \"index\": 3,\n                    \"fields\": {\n                        \"Action\": \"Step 3\",\n                        \"Data\": \"input Data 3\",\n                        \"Expected Result\": \"Excepted result 3\"\n                    }\n                },\n                 {\n                    \"index\": 4,\n                    \"fields\": {\n                        \"Action\": \"Step 4\",\n                        \"Data\": \"input Data 4\",\n                        \"Expected Result\": \"Excepted result 4\"\n                    }\n                }\n            ]\n        }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create manual test T4 - Xray v4.x",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"T4_KEY\", jsonData.key);",
									"});",
									"",
									"postman.setNextRequest(\"create cucumber test T2\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"T4\",\n       \"description\": \"T4: example of manual test\",\n       \"issuetype\": {\n          \"name\": \"{{TEST_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Manual\" },\n       \"{{CF_Manual_Test_Steps}}\": {\n            \"steps\": [\n\t\t\t\t{\n                    \"index\": 1,\n                    \"fields\": {\n                        \"Action\": \"Step 1\",\n                        \"Data\": \"input Data 1\",\n                        \"Expected Result\": \"Excepted result 1\"\n                    }\n                },\n                 {\n                    \"index\": 2,\n                    \"fields\": {\n                        \"Action\": \"Step 2\",\n                        \"Data\": \"input Data 2\",\n                        \"Expected Result\": \"Excepted result 2\"\n                    }\n                },\n                 {\n                    \"index\": 3,\n                    \"fields\": {\n                        \"Action\": \"Step 3\",\n                        \"Data\": \"input Data 3\",\n                        \"Expected Result\": \"Excepted result 3\"\n                    }\n                },\n                 {\n                    \"index\": 4,\n                    \"fields\": {\n                        \"Action\": \"Step 4\",\n                        \"Data\": \"input Data 4\",\n                        \"Expected Result\": \"Excepted result 4\"\n                    }\n                }\n            ]\n        }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create cucumber test T2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"T2_KEY\", jsonData.key);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"Sum of two numbers\",\n       \"description\": \"example of cucumber automated test - Scenario Outline\",\n       \"issuetype\": {\n          \"name\": \"Test\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Cucumber\" },\n       \"{{CF_Cucumber_Test_Type}}\": { \"value\": \"Scenario Outline\" },\n       \"{{CF_Cucumber_Scenario}}\": \"Given I have entered <input_1> into the calculator\\nAnd I have entered <input_2> into the calculator\\nWhen I press <button>\\nThen the result should be <output> on the screen\\n\\n  Examples:\\n    | input_1 | input_2 | button | output |\\n    | 20      | 30      | add    | 50     |\\n    | 2       | 5       | add    | 7      |\" \n   \n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create generic test T3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"T3_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"T3\",\n       \"description\": \"T3: example of generic test\",\n       \"issuetype\": {\n          \"name\": \"{{TEST_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Test_Repository_Path}}\": \"{{F1_PATH}}\",\n       \"{{CF_Test_Type}}\": { \"value\": \"Generic\" },\n       \"{{CF_Generic_Definition}}\": \"sum_script.sh\"        \n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create manual precondition P1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Precondition created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"P1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"P1\",\n       \"description\": \"P1: example of precondition\",\n       \"issuetype\": {\n          \"name\": \"{{PRECONDITION_ISSUETYPE_NAME}}\"\n       },\n       \"{{CF_Precondition_Type}}\": { \"value\": \"Manual\" }\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create test set TS1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test Set created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"TS1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"TS1\",\n       \"description\": \"TS1: example of test set\",\n       \"issuetype\": {\n          \"name\": \"{{TESTSET_ISSUETYPE_NAME}}\"\n       }     \n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create test plan TP1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Test Plan created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.key).to.not.be.empty;",
									"    pm.globals.set(\"TP1_KEY\", jsonData.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"fields\": {\n       \"project\":\n       {\n          \"key\": \"{{PROJECT_KEY}}\"\n       },\n       \"summary\": \"TP1\",\n       \"description\": \"TP1: example of test plan\",\n       \"issuetype\": {\n          \"name\": \"{{TESTPLAN_ISSUETYPE_NAME}}\"\n       }     \n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/api/2/issue",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue"
							]
						}
					},
					"response": []
				},
				{
					"name": "create test execution TE1 with one run per each test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Execution created with 3 runs\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
									"    pm.globals.set(\"TE1_KEY\", jsonData.testExecIssue.key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"info\" : {\n        \"summary\" : \"Execution of automated tests for release\",\n        \"description\" : \"This execution is automatically created when importing execution results from an external source\"\n    },\n    \"tests\" : [\n        {\n            \"testKey\" : \"{{T1_KEY}}\",\n            \"start\" : \"2014-08-30T11:47:35+01:00\",\n            \"finish\" : \"2014-08-30T11:50:56+01:00\",\n            \"comment\" : \"Successful execution\",\n            \"status\" : \"PASS\",\n            \"evidences\" : [\n                {\n                    \"data\": \"ZHVtbXkgY29udGVudA==\",\n                    \"filename\": \"dummy.txt\",\n                    \"contentType\": \"text/plain\"\n                }\n            ],\n\t\t\t\"steps\": [\n                {\n                    \"status\": \"PASS\",\n                    \"comment\": \"Coment on Test Step Result 1\",\n                    \"evidences\" : [\n\t\t                {\n\t\t                    \"data\": \"ZHVtbXkgY29udGVudA==\",\n\t\t                    \"filename\": \"dummy.txt\",\n\t\t                    \"contentType\": \"text/plain\"\n\t\t                }\n\t\t            ]\n                },\n                {\n                    \"status\": \"PASS\",\n                    \"comment\": \"Coment on Test Step Result 2\"\n                },\n                {\n                    \"status\": \"PASS\",\n                    \"comment\": \"Coment on Test Step Result 3\"\n                },\n\t\t\t\t{\n                    \"status\": \"PASS\",\n                    \"comment\": \"Coment on Test Step Result 4\"\n                }\n        \t]\n        },\n        {\n            \"testKey\" : \"{{T2_KEY}}\",\n            \"start\" : \"2014-08-30T11:47:35+01:00\",\n            \"finish\" : \"2014-08-30T11:50:56+01:00\",\n            \"comment\" : \"Successful execution\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T3_KEY}}\",\n            \"start\" : \"2014-08-30T11:47:35+01:00\",\n            \"finish\" : \"2014-08-30T11:50:56+01:00\",\n            \"comment\" : \"Successful execution\",\n            \"status\" : \"PASS\"\n        }\n ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"import",
								"execution"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tests",
			"item": [
				{
					"name": "export",
					"item": [
						{
							"name": "export tests",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Tests returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"3 Tests\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf(3);",
											"    //pm.globals.set(\"T1_STEP1_ID\", jsonData[0].definition.steps[0].id)",
											"    // hack",
											"    if (jsonData[0].definition.steps != undefined){",
											"        pm.globals.set(\"T1_STEP1_ID\", jsonData[0].definition.steps[0].id)",
											"    }",
											"    if (jsonData[1].definition.steps != undefined){",
											"        pm.globals.set(\"T1_STEP1_ID\", jsonData[1].definition.steps[0].id)",
											"    }",
											"    if (jsonData[2].definition.steps != undefined){",
											"        pm.globals.set(\"T1_STEP1_ID\", jsonData[2].definition.steps[0].id)",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test?keys={{T1_KEY}};{{T2_KEY}};{{T3_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test"
									],
									"query": [
										{
											"key": "keys",
											"value": "{{T1_KEY}};{{T2_KEY}};{{T3_KEY}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "export test runs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"1 Test Run returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    //pm.expect(jsonData).to.have.lengthOf(1);",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"    pm.globals.set(\"TR2_ID\",jsonData[0].id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T2_KEY}}/testruns",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T2_KEY}}",
										"testruns"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "export test executions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"1 Test Execution returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T2_KEY}}/testexecutions",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T2_KEY}}",
										"testexecutions"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "test steps",
					"item": [
						{
							"name": "get all test steps",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"4 steps returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf(4);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get a specific test step by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"step details returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.eq(pm.globals.get(\"T1_STEP1_ID\"));",
											"    pm.expect(jsonData.index).to.eq(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_STEP1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_STEP1_ID}}"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "add a step, with an attachment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.globals.set(\"T1_NEWSTEP_ID\",jsonData.id);",
											"    pm.globals.set(\"T1_NEWSTEP_ATTACH1_ID\",jsonData.attachmentIds[0]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"step\":\"example step5\",\n   \"data\":\"example data5\",\n   \"result\":\"example result5\",\n   \"attachments\":[\n\t\t{\n\t\t   \"data\":\"ZHVtbXkgY29udGVudA==\",\n\t\t   \"filename\":\"dummy.txt\",\n\t\t   \"contentType\":\"text/plain\"\n\t\t}\n   ]\n}"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "modify a step",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.id).to.eq(pm.globals.get(\"T1_NEWSTEP_ID\"));",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"step\":\"example step5x\",\n   \"data\":\"example data5x\",\n   \"result\":\"example result5x\",\n   \"attachments\": {\n\t   \t\"add\": [\n\t\t\t\t{\n\t\t\t\t   \"data\":\"ZHVtbXkgY29udGVudA==\",\n\t\t\t\t   \"filename\":\"dummy.txt\",\n\t\t\t\t   \"contentType\":\"text/plain\"\n\t\t\t\t}\n\t\t\t]\n   }\n}"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_NEWSTEP_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_NEWSTEP_ID}}"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get all step attachments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"attachments returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf.at.least(2);",
											"    pm.expect(jsonData[0].id).to.eq(pm.globals.get(\"T1_NEWSTEP_ATTACH1_ID\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_NEWSTEP_ID}}/attachment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_NEWSTEP_ID}}",
										"attachment"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "delete a step attachment, by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_NEWSTEP_ID}}/attachment/{{T1_NEWSTEP_ATTACH1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_NEWSTEP_ID}}",
										"attachment",
										"{{T1_NEWSTEP_ATTACH1_ID}}"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "delete a step, by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/step/{{T1_NEWSTEP_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"test",
										"{{T1_KEY}}",
										"step",
										"{{T1_NEWSTEP_ID}}"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "preconditions",
			"item": [
				{
					"name": "associate test to a precondition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"add\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/precondition/{{P1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"precondition",
								"{{P1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "export test' preconditions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Precondition returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/preconditions",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"test",
								"{{T1_KEY}}",
								"preconditions"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get tests associated to precondition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Runs returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Run returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/precondition/{{P1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"precondition",
								"{{P1_KEY}}",
								"test"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disassociate test from a precondition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"remove\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/precondition/{{P1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"precondition",
								"{{P1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "test sets",
			"item": [
				{
					"name": "associate test to a test set",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"add\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testset/{{TS1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testset",
								"{{TS1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "get tests associated to test set",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Runs returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Run returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testset/{{TS1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testset",
								"{{TS1_KEY}}",
								"test"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "export test' test sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Set returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/testsets",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"test",
								"{{T1_KEY}}",
								"testsets"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disassociate test from a test set",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"remove\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testset/{{TS1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testset",
								"{{TS1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "test executions",
			"item": [
				{
					"name": "associate test to a test execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"add\": [\n        \"{{T4_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testexec/{{TE1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testexec",
								"{{TE1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "get tests associated to test execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Runs returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Run returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(4);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testexec/{{TE1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testexec",
								"{{TE1_KEY}}",
								"test"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disassociate test from a test execution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"remove\": [\n        \"{{T4_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testexec/{{TE1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testexec",
								"{{TE1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "test runs",
			"item": [
				{
					"name": "details",
					"item": [
						{
							"name": "get test run by test and test execution keys",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.testKey).to.eq(pm.globals.get(\"T3_KEY\"));",
											"    pm.expect(jsonData.testExecKey).to.eq(pm.globals.get(\"TE1_KEY\"));",
											"    pm.expect(jsonData.status).to.eq(\"PASS\");",
											"    pm.globals.set(\"TR3_ID\",jsonData.id);",
											"",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun?testExecIssueKey={{TE1_KEY}}&testIssueKey={{T3_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun"
									],
									"query": [
										{
											"key": "testExecIssueKey",
											"value": "{{TE1_KEY}}"
										},
										{
											"key": "testIssueKey",
											"value": "{{T3_KEY}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get test run for T1 by test and test execution keys",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.testKey).to.eq(pm.globals.get(\"T1_KEY\"));",
											"    pm.expect(jsonData.testExecKey).to.eq(pm.globals.get(\"TE1_KEY\"));",
											"    pm.expect(jsonData.status).to.eq(\"PASS\");",
											"    pm.globals.set(\"TR1_ID\",jsonData.id);",
											"",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun?testExecIssueKey={{TE1_KEY}}&testIssueKey={{T1_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun"
									],
									"query": [
										{
											"key": "testExecIssueKey",
											"value": "{{TE1_KEY}}"
										},
										{
											"key": "testIssueKey",
											"value": "{{T1_KEY}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get test run by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.testKey).to.eq(pm.globals.get(\"T3_KEY\"));",
											"    pm.expect(jsonData.testExecKey).to.eq(pm.globals.get(\"TE1_KEY\"));",
											"    pm.expect(jsonData.status).to.eq(\"PASS\");",
											"    pm.globals.set(\"TR3_ID\",jsonData.id);",
											"",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update test run by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    pm.sendRequest({",
											"        url:  pm.variables.replaceIn(pm.request.url).toString(),",
											"        method: 'PUT',",
											"        header: {",
											"            'content-type': 'application/json'",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({ status: \"PASS\", comment: \"Successful execution\" })",
											"        }",
											"    }, function (err, res) {",
											"        ",
											"    });",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"FAIL\",\n    \"comment\": \"failed\"\n}"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "status",
					"item": [
						{
							"name": "get test run status by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"status returned\", function () {",
											"    var response = pm.response.text();",
											"    pm.expect(pm.response.text()).to.eq(\"PASS\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/status",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "set test run status by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/status?status=FAIL",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"status"
									],
									"query": [
										{
											"key": "status",
											"value": "FAIL"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "defects",
					"item": [
						{
							"name": "add/link defects to test run",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n\t\"{{D1_KEY}}\"\n]"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/defect",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"defect"
									]
								}
							},
							"response": []
						},
						{
							"name": "get test run defects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"    pm.expect(jsonData[0].key).to.eq(pm.globals.get(\"D1_KEY\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/defect",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"defect"
									]
								}
							},
							"response": []
						},
						{
							"name": "remove/unlink defects from test run",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/defect/{{D1_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"defect",
										"{{D1_KEY}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "evidence",
					"item": [
						{
							"name": "add evidence/attachment(s) to the test run",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/attachment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"attachment"
									]
								}
							},
							"response": []
						},
						{
							"name": "get all evidence/attachment(s) linked to the test run",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"attachment returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"    pm.globals.set(\"TR1_ATTACH1_ID\",jsonData[0].id);",
											"    pm.globals.set(\"TR1_ATTACH1_NAME\",jsonData[0].fileName);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/attachment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"attachment"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete evidence/attachment by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/attachment/{{TR1_ATTACH1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"attachment",
										"{{TR1_ATTACH1_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete evidence/attachment by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "dummy.txt"
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/attachment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR1_ID}}",
										"attachment"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "comment",
					"item": [
						{
							"name": "get test run comment by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"status returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.raw).to.eq(\"Successful execution\");",
											"    pm.expect(jsonData.rendered).to.eq(\"<p>Successful execution</p>\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/comment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"comment"
									]
								}
							},
							"response": []
						},
						{
							"name": "set test run comment by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"status returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.raw).to.eq(\"My new comment\");",
											"    pm.expect(jsonData.rendered).to.eq(\"<p>My new comment</p>\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "My new comment",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/comment",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"comment"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "assignee",
					"item": [
						{
							"name": "get test run assignee by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"status returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.assigned).to.eq(true);",
											"    pm.expect(jsonData.assignee).to.eq(pm.variables.get(\"JIRA_USERNAME\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR3_ID}}/assignee",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR3_ID}}",
										"assignee"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "test step results",
					"item": [
						{
							"name": "overall",
							"item": [
								{
									"name": "get all test run' steps",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"data returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.not.be.empty;",
													"});",
													"",
													"pm.test(\"4 steps returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.have.lengthOf(4);",
													"    pm.globals.set(\"TR1_STEP1_ID\",jsonData[0].id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step"
											],
											"query": [
												{
													"key": null,
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "rever api endppoint doc"
									},
									"response": []
								}
							]
						},
						{
							"name": "details",
							"item": [
								{
									"name": "get test run' step details by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"data returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.not.be.empty;",
													"});",
													"",
													"pm.test(\"4 steps returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.not.be.empty;",
													"    pm.expect(jsonData.id).to.eq(pm.globals.get(\"TR1_STEP1_ID\"));",
													"    pm.expect(jsonData.step.raw).to.eq(\"Step 1\");",
													"    pm.expect(jsonData.result.raw).to.eq(\"Excepted result 1\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}"
											],
											"query": [
												{
													"key": null,
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "rever api endppoint doc"
									},
									"response": []
								},
								{
									"name": "set test run' step details by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"id\":\"{{TR1_STEP1_ID}}\",\n   \"status\":\"PASS\",\n   \"comment\":\"The comment\",\n   \"evidences\":[\n      {\n\t   \"data\":\"ZHVtbXkgY29udGVudA==\",\n\t   \"filename\":\"dummy.txt\",\n\t   \"contentType\":\"text/plain\"\n      }\n   ],\n   \"actualResult\":\"The actual result\"\n}"
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}"
											],
											"query": [
												{
													"key": null,
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "rever api endppoint doc"
									},
									"response": []
								}
							]
						},
						{
							"name": "status",
							"item": [
								{
									"name": "get test run' step status by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"status returned\", function () {",
													"    var response = pm.response.text();",
													"    pm.expect(pm.response.text()).to.eq(\"PASS\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/status",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "set test run' step status by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/status?status=FAIL",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"status"
											],
											"query": [
												{
													"key": "status",
													"value": "FAIL"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "evidence",
							"item": [
								{
									"name": "add evidence/attachment(s) to the test run step",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"data\":\"ZHVtbXkgY29udGVudA==\",\n   \"filename\":\"dummy.txt\",\n   \"contentType\":\"text/plain\"\n}"
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/attachment",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"attachment"
											]
										}
									},
									"response": []
								},
								{
									"name": "get all evidence/attachment(s) linked to the test run step",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"data returned\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData).to.not.be.empty;",
													"    pm.expect(jsonData.length).to.be.above(0);",
													"    pm.globals.set(\"TR1_STEP1_ATTACH1_ID\",jsonData[0].id);",
													"    pm.globals.set(\"TR1_STEP1_ATTACH1_NAME\",jsonData[0].fileName);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/attachment",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"attachment"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete evidence/attachment in test run step by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/attachment/{{TR1_STEP1_ATTACH1_ID}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"attachment",
												"{{TR1_STEP1_ATTACH1_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete evidence/attachment in test run step by name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "dummy.txt"
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR1_ID}}/step/{{TR1_STEP1_ID}}/attachment",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"api",
												"testrun",
												"{{TR1_ID}}",
												"step",
												"{{TR1_STEP1_ID}}",
												"attachment"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "cucumber/gherkin scenario outline examples",
					"item": [
						{
							"name": "get outline example details, by index",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"example returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.rank).to.eq(1)",
											"    pm.expect(jsonData.status).to.eq(\"TODO\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR2_ID}}/example/0",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR2_ID}}",
										"example",
										"0"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "rever api endppoint doc"
							},
							"response": []
						},
						{
							"name": "update outline example details, by index",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrun/{{TR2_ID}}/example/0?status=PASS",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrun",
										"{{TR2_ID}}",
										"example",
										"0"
									],
									"query": [
										{
											"key": "status",
											"value": "PASS"
										}
									]
								},
								"description": "rever api endppoint doc"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "test plans",
			"item": [
				{
					"name": "associate test to a test plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"add\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testplan/{{TP1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testplan",
								"{{TP1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "get tests associated to test plan, along with their consolidated status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"tests returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testplan/{{TP1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testplan",
								"{{TP1_KEY}}",
								"test"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "export test' test plans",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"1 Test Plan returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/test/{{T1_KEY}}/testplans",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"test",
								"{{T1_KEY}}",
								"testplans"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disassociate test from a test plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"no data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"remove\": [\n        \"{{T1_KEY}}\"\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testplan/{{TP1_KEY}}/test",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"testplan",
								"{{TP1_KEY}}",
								"test"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "test repository",
			"item": [
				{
					"name": "hierarchy",
					"item": [
						{
							"name": "get all test repository's folder hierarchy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.folders).to.not.be.empty;",
											"    pm.expect(jsonData.allTestsCount).to.be.above(0);",
											"    pm.expect(jsonData.allOrphanTestsCount).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "folders",
					"item": [
						{
							"name": "get details of a test repository's folder by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.name).to.eq(pm.globals.get(\"F1_NAME\"));",
											"    pm.expect(jsonData.id).to.eq(pm.globals.get(\"F1_ID\"));",
											"    pm.expect(jsonData.testCount).to.be.above(0);",
											"    pm.expect(jsonData.totalTestCount).to.be.above(0);",
											"    pm.expect(jsonData.testRepositoryPath).to.eq(\"\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F1_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create folder in Test Repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Folder created\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).not.eq(undefined);",
											"    pm.globals.set(\"F3_ID\", jsonData.id);",
											"    pm.globals.set(\"F3_PATH\", \"/\" + jsonData.name);",
											"    pm.globals.set(\"F3_NAME\", jsonData.name);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Postman 3\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F1_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F1_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update test repository's folder details by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Postman X\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F3_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F3_ID}}"
									]
								},
								"description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n-  depends on previous"
							},
							"response": []
						},
						{
							"name": "delete a test repository's folder by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Postman X\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F3_ID}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F3_ID}}"
									]
								},
								"description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n-  depends on previous"
							},
							"response": []
						}
					]
				},
				{
					"name": "tests",
					"item": [
						{
							"name": "get tests within a specific folder in the test repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"data returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.not.be.empty;",
											"    pm.expect(jsonData.tests).to.not.be.empty;",
											"    pm.expect(jsonData.total).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F1_ID}}/tests",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F1_ID}}",
										"tests"
									]
								}
							},
							"response": []
						},
						{
							"name": "add tests to a specific folder in the test repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"add\": [\n    \"{{T4_KEY}}\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F2_ID}}/tests",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F2_ID}}",
										"tests"
									]
								},
								"description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n- not depends on previous"
							},
							"response": []
						},
						{
							"name": "remove tests from a specific folder in the test repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"remove\": [\n    \"{{T4_KEY}}\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/testrepository/{{PROJECT_KEY}}/folders/{{F2_ID}}/tests",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"api",
										"testrepository",
										"{{PROJECT_KEY}}",
										"folders",
										"{{F2_ID}}",
										"tests"
									]
								},
								"description": "Notes:\n- the docs mention HTTP status code 204 in success but it returns 200\n- not depends on previous"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "execution results",
			"item": [
				{
					"name": "import",
					"item": [
						{
							"name": "Xray JSON",
							"item": [
								{
									"name": "standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"info\" : {\n        \"summary\" : \"Execution of automated tests for release\",\n        \"description\" : \"This execution is automatically created when importing execution results from an external source\",\n        \"startDate\" : \"2020-05-30T11:37:00+01:00\",\n        \"finishDate\" : \"2020-05-30T11:50:00+01:00\"\n    },\n    \"tests\" : [\n        {\n            \"testKey\" : \"{{T1_KEY}}\",\n            \"start\" : \"2020-05-30T11:47:35+01:00\",\n            \"finish\" : \"2020-05-30T11:49:35+01:00\",\n            \"comment\" : \"Successful execution1\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T2_KEY}}\",\n            \"start\" : \"2020-05-30T11:37:35+01:00\",\n            \"finish\" : \"2020-05-30T11:39:35+01:00\",\n            \"comment\" : \"Successful execution2\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T3_KEY}}\",\n            \"start\" : \"2020-05-30T11:44:35+01:00\",\n            \"finish\" : \"2020-05-30T11:45:35+01:00\",\n            \"comment\" : \"Successful execution3\",\n            \"status\" : \"PASS\"\n        }\n ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Cucumber",
							"item": [
								{
									"name": "standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{\n    \"id\": \"as-a-user,-i-can-sum-two-numbers\",\n    \"uri\": \"features/sample_scenario_outline.feature\",\n    \"keyword\": \"Feature\",\n    \"name\": \"As a user, I can sum two numbers\",\n    \"description\": \"\",\n    \"line\": 2,\n    \"tags\": [{\n        \"name\": \"@REQ_{{S1_KEY}}\",\n        \"line\": 1\n    }],\n    \"elements\": [{\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;2\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 13,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@TEST_{{T2_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 21000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 20 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 45000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 30 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 11000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 17000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 50 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 764000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 8000\n            }\n        }]\n    }, {\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;3\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 14,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@@TEST_{{T2_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 8000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 2 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 14000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 5 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 9000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 11000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 7 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 19000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 6000\n            }\n        }]\n    }, {\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;4\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 15,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@TEST_{{T2_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 8000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 0 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 14000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 40 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 9000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 11000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 40 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 17000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 6000\n            }\n        }]\n    }, {\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;5\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 16,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@TEST_{{T2_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 7000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 4 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 14000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 50 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 9000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 27000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 54 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 17000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 6000\n            }\n        }]\n    }, {\n        \"id\": \"as-a-user,-i-can-sum-two-numbers;;;6\",\n        \"keyword\": \"Scenario Outline\",\n        \"name\": \"\",\n        \"description\": \"\",\n        \"line\": 17,\n        \"type\": \"scenario\",\n        \"tags\": [{\n            \"name\": \"@REQ_{{S1_KEY}}\",\n            \"line\": 1\n        }, {\n            \"name\": \"@{{T1_KEY}}\",\n            \"line\": 4\n        }],\n        \"before\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:9\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 8000\n            }\n        }],\n        \"steps\": [{\n            \"keyword\": \"Given \",\n            \"name\": \"I have entered 5 into the calculator\",\n            \"line\": 6,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 14000\n            }\n        }, {\n            \"keyword\": \"And \",\n            \"name\": \"I have entered 50 into the calculator\",\n            \"line\": 7,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:39\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 9000\n            }\n        }, {\n            \"keyword\": \"When \",\n            \"name\": \"I press add\",\n            \"line\": 8,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:43\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 11000\n            }\n        }, {\n            \"keyword\": \"Then \",\n            \"name\": \"the result should be 55 on the screen\",\n            \"line\": 9,\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:51\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 18000\n            }\n        }],\n        \"after\": [{\n            \"match\": {\n                \"location\": \"features/step_definitions/calculator_steps.rb:13\"\n            },\n            \"result\": {\n                \"status\": \"passed\",\n                \"duration\": 6000\n            }\n        }]\n    }]\n}]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/cucumber?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"cucumber"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Behave",
							"item": [
								{
									"name": "standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[{\n        \"keyword\": \"Feature\",\n        \"name\": \"As a user, I can sum two numbers\",\n        \"tags\": [\"REQ_{{S1_KEY}}\"],\n        \"location\": \"features/sample_scenario_outline.feature:2\",\n        \"status\": \"failed\",\n        \"elements\": [{\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.1 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:13\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 20 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 30 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 50 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }, {\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.2 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:14\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 2 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 5 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 7 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }, {\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.3 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:15\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 0 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 40 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 40 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }, {\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.4 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:16\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 4 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 50 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 54 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }, {\n            \"type\": \"scenario\",\n            \"keyword\": \"Scenario Outline\",\n            \"name\": \" -- @1.5 \",\n            \"tags\": [\"TEST_{{T2_KEY}}\"],\n            \"location\": \"features/sample_scenario_outline.feature:17\",\n            \"steps\": [{\n                \"keyword\": \"Given\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 5 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:6\",\n                \"result\": {\n                    \"status\": \"undefined\",\n                    \"duration\": 0\n                }\n            }, {\n                \"keyword\": \"And\",\n                \"step_type\": \"given\",\n                \"name\": \"I have entered 50 into the calculator\",\n                \"location\": \"features/sample_scenario_outline.feature:7\"\n            }, {\n                \"keyword\": \"When\",\n                \"step_type\": \"when\",\n                \"name\": \"I press add\",\n                \"location\": \"features/sample_scenario_outline.feature:8\"\n            }, {\n                \"keyword\": \"Then\",\n                \"step_type\": \"then\",\n                \"name\": \"the result should be 55 on the screen\",\n                \"location\": \"features/sample_scenario_outline.feature:9\"\n            }],\n            \"status\": \"failed\"\n        }]\n    }\n]\n    ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/behave?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"behave"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "JUnit",
							"item": [
								{
									"name": "standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "./junit_sample_test.xml"
												}
											]
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/junit?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"junit"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TestNG",
							"item": [
								{
									"name": "standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "./testng_sample.xml"
												}
											]
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/testng?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"testng"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "NUnit",
							"item": [
								{
									"name": "standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "./nunit_sample.xml"
												}
											]
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/nunit?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"nunit"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Robot Framework",
							"item": [
								{
									"name": "standard",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Test Execution created\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{JIRA_PASSWORD}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{JIRA_USERNAME}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "./robot_sample.xml"
												}
											]
										},
										"url": {
											"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution/robot?projectKey={{PROJECT_KEY}}",
											"host": [
												"{{JIRA_BASEURL}}"
											],
											"path": [
												"rest",
												"raven",
												"1.0",
												"import",
												"execution",
												"robot"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "{{PROJECT_KEY}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "multiple Cucumber",
							"item": []
						}
					]
				},
				{
					"name": "export",
					"item": [
						{
							"name": "export test runs by Test Execution",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"returns 3 test runs\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.lengthOf(3);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/testruns?testExecKey={{TE1_KEY}}",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"testruns"
									],
									"query": [
										{
											"key": "testExecKey",
											"value": "{{TE1_KEY}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "cucumber",
			"item": [
				{
					"name": "import cucumber tests (scenarios/scenario outlines and backgrounds)",
					"item": [
						{
							"name": "import cucumber tests and background from a .feature",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test Execution created with 3 runs\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.testExecIssue.key).to.not.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"info\" : {\n        \"summary\" : \"Execution of automated tests for release\",\n        \"description\" : \"This execution is automatically created when importing execution results from an external source\",\n        \"startDate\" : \"2020-05-30T11:37:00+01:00\",\n        \"finishDate\" : \"2020-05-30T11:50:00+01:00\"\n    },\n    \"tests\" : [\n        {\n            \"testKey\" : \"{{T1_KEY}}\",\n            \"start\" : \"2020-05-30T11:47:35+01:00\",\n            \"finish\" : \"2020-05-30T11:49:35+01:00\",\n            \"comment\" : \"Successful execution1\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T2_KEY}}\",\n            \"start\" : \"2020-05-30T11:37:35+01:00\",\n            \"finish\" : \"2020-05-30T11:39:35+01:00\",\n            \"comment\" : \"Successful execution2\",\n            \"status\" : \"PASS\"\n        },\n        {\n            \"testKey\" : \"{{T3_KEY}}\",\n            \"start\" : \"2020-05-30T11:44:35+01:00\",\n            \"finish\" : \"2020-05-30T11:45:35+01:00\",\n            \"comment\" : \"Successful execution3\",\n            \"status\" : \"PASS\"\n        }\n ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/import/execution",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"import",
										"execution"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "export cucumber tests",
					"item": [
						{
							"name": "export cucumber tests, as .feature",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"return a .feature file\", function () {",
											"    var response = pm.response;",
											"    pm.expect(response).to.not.be.empty;",
											"    pm.expect(response.text()).to.include(\"Scenario Outline: Sum of two numbers\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{JIRA_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{JIRA_USERNAME}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/export/test?keys={{T2_KEY}}&fz=false",
									"host": [
										"{{JIRA_BASEURL}}"
									],
									"path": [
										"rest",
										"raven",
										"1.0",
										"export",
										"test"
									],
									"query": [
										{
											"key": "keys",
											"value": "{{T2_KEY}}"
										},
										{
											"key": "fz",
											"value": "false"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "get possible test statuses from configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"several statuses returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf.at.least(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/settings/teststatuses",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"settings",
								"teststatuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "get possible test step statuses from configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"several statuses returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf.at.least(4);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{JIRA_PASSWORD}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{JIRA_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{JIRA_BASEURL}}/rest/raven/1.0/api/settings/teststepstatuses",
							"host": [
								"{{JIRA_BASEURL}}"
							],
							"path": [
								"rest",
								"raven",
								"1.0",
								"api",
								"settings",
								"teststepstatuses"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{JIRA_PASSWORD}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{JIRA_USERNAME}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "TEST_ISSUETYPE_NAME",
			"value": "Test"
		},
		{
			"key": "PRECONDITION_ISSUETYPE_NAME",
			"value": "Pre-Condition"
		},
		{
			"key": "TESTSET_ISSUETYPE_NAME",
			"value": "Test Set"
		},
		{
			"key": "TESTEXECUTION_ISSUETYPE_NAME",
			"value": "Test Execution"
		},
		{
			"key": "TESTPLAN_ISSUETYPE_NAME",
			"value": "Test Plan"
		},
		{
			"key": "CF_Test_Type",
			"value": "customfield_10000"
		},
		{
			"key": "CF_Precondition_Type",
			"value": "customfield_10008"
		},
		{
			"key": "CF_Cucumber_Scenario",
			"value": "customfield_10002"
		},
		{
			"key": "CF_Cucumber_Test_Type",
			"value": "customfield_10001"
		},
		{
			"key": "CF_Manual_Test_Steps",
			"value": "customfield_10004"
		},
		{
			"key": "CF_Generic_Definition",
			"value": "customfield_10003"
		},
		{
			"key": "PROJECT_KEY",
			"value": "CALC"
		},
		{
			"key": "CF_Test_Environments",
			"value": "customfield_11805"
		},
		{
			"key": "BUG_ISSUETYPE_NAME",
			"value": "Bug"
		},
		{
			"key": "STORY_ISSUETYPE_NAME",
			"value": "Story"
		},
		{
			"key": "CF_Test_Repository_Path",
			"value": "customfield_12100"
		},
		{
			"key": "XRAY_VERSION_MAJOR",
			"value": "4"
		}
	]
}
